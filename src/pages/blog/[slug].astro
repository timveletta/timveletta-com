---
import { Image } from "astro:assets";
import "./blog-post.css";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { getCollection } from "astro:content";
import { fade } from "astro:transitions";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<html lang="en" transition:animate={fade({ duration: "0.4s" })}>
  <head>
    <BaseHead
      title={entry.data.title}
      description={entry.data.description}
      noIndex={Boolean(entry.data.externalLink)}
      image={entry.data.heroImage}
      externalLink={entry.data.externalLink}
    />
  </head>
  <body class="bg-slate-100 border-t-8 border-primary dark:bg-gray-900">
    <Header />
    <main>
      <article>
        <div class="container mx-auto max-w-screen-lg my-20 p-2">
          <h1
            class="text-3xl font-extrabold text-gray-900 tracking-tight sm:text-4xl md:text-5xl leading-snug text-center"
          >
            {entry.data.title}
          </h1>
          <time
            datetime={entry.data.pubDate}
            class="block text-base leading-6 font-medium text-gray-500 text-center my-4"
          >
            {
              new Date(entry.data.pubDate).toLocaleDateString("en-us", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
          <div class="relative">
            <Image
              format="webp"
              class="object-cover mb-12 rounded-lg"
              width={1008}
              height={567}
              src={entry.data.heroImage}
              alt={`Hero image for post ${entry.data.title}`}
            />

            <p
              class="absolute bottom-4 right-4 bg-gray-200 text-sm px-2 py-1 rounded-md text-gray-800"
            >
              Photo by{" "}
              <a class="underline" href={entry.data.imageCreditLink}>
                {entry.data.imageCreditName}
              </a>{" "}
              on
              <a
                class="underline"
                href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"
              >
                Unsplash
              </a>
            </p>
          </div>
          <div class="text-gray-900 leading-loose font-serif text-lg markdown">
            <Content />
          </div>
          {
            entry.data.tags && entry.data.tags.length ? (
              <div class="my-10">
                <div class="flex items-center flex-wrap">
                  {entry.data.tags.map((tag) => (
                    <a
                      href={`/tags/${tag}`}
                      class="flex items-center px-3 py-0.5 mr-1 mb-1 rounded-full font-medium bg-secondary hover:bg-primary text-white"
                    >
                      {tag}
                    </a>
                  ))}
                </div>
              </div>
            ) : null
          }
          <a href="/blog" class="font-bold mt-4 py-4 text-primary self-end">
            ‚Üê Back to the blog
          </a>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
