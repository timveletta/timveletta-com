---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../config';
import ProgressBar from '../components/ProgressBar.astro';
import GoalCard from '../components/GoalCard.astro';

const getBooksRead = async () => {
	try {
		const response = await fetch('https://timveletta.com/api/books-read');
		const data = await response.json();
		return data;
	} catch (err) {
		console.error(err);
		return;
	}
};

const getGamesPlayed = async () => {
	try {
		const response = await fetch('https://timveletta.com/api/games-played');
		const data = await response.json();
		return data;
	} catch (err) {
		console.error(err);
		return;
	}
};

const getDistanceCycled = async () => {
	try {
		const response = await fetch('https://timveletta.com/api/distance-cycled');
		const data = await response.json();
		return data;
	} catch (err) {
		console.error(err);
		return;
	}
};

const booksRead = await getBooksRead();
const gamesPlayed = await getGamesPlayed();
const distanceCycled = await getDistanceCycled();
const updatedAt = new Date().toLocaleString('en-AU');
const postsThisYear = (await Astro.glob('./blog/*.{md,mdx}')).filter(
	(post) => new Date(post.frontmatter.pubDate).getFullYear() === 2023
).length;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="bg-slate-100 border-t-8 border-primary">
		<Header />
		<main class="my-12">
			<div class="container mx-auto grid md:grid-cols-2 grid-cols-1 gap-4">
				<div
					class="bg-white border border-gray-300 rounded-lg p-4 shadow-sm col-span-full"
				>
					<ProgressBar percentage={20} />
					<p class="text-sm font-bold text-gray-500 tracking-wide text-right">
						Last updated: {updatedAt}
					</p>
				</div>
				<GoalCard
					value={postsThisYear}
					goal={24}
					measure="Blog Posts Written"
				/>
				<GoalCard
					value={booksRead.numBooksRead}
					goal={24}
					measure="Books Read"
				/>
				<GoalCard
					value={gamesPlayed.gamesPlayed}
					goal={gamesPlayed.totalCollection}
					measure="Board Games Played"
				/>
				<GoalCard
					value={Math.round(distanceCycled.distanceCycled)}
					goal={1200}
					measure="Distance Cycled (km)"
				/>
			</div>
		</main>
		<Footer />
	</body>
</html>
