---
import { Image } from '@astrojs/image/components';
import './blog-post.css';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
	content: {
		title: string;
		description: string;
		pubDate: string;
		heroImage: string;
		tags: string[];
	};
	frontmatter: {
		externalLink?: string;
		imageCreditName: string;
		imageCreditLink: string;
	};
}

const {
	content: { title, description, pubDate, tags, heroImage },
	frontmatter: { externalLink, imageCreditName, imageCreditLink },
} = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead
			title={title}
			description={description}
			noIndex={Boolean(externalLink)}
			image={heroImage}
			externalLink={externalLink}
		/>
	</head>
	<body class="bg-slate-100">
		<Header />
		<main>
			<article>
				<div class="container mx-auto max-w-screen-lg my-20 p-2">
					<h1
						class="text-3xl font-extrabold text-gray-900 tracking-tight sm:text-4xl md:text-5xl leading-snug text-center"
					>
						{title}
					</h1>
					<time
						datetime={pubDate}
						class="block text-base leading-6 font-medium text-gray-500 text-center my-4"
					>
						{
							new Date(pubDate).toLocaleDateString('en-us', {
								year: 'numeric',
								month: 'long',
								day: 'numeric',
							})
						}
					</time>
					<div class="relative">
						<Image
							format="webp"
							class="object-cover mb-12 rounded-lg"
							aspectRatio={16 / 9}
							width={1008}
							height={567}
							src={heroImage}
							alt={`Hero image for post ${title}`}
						/>

						<p
							class="absolute bottom-4 right-4 bg-gray-200 text-sm px-2 py-1 rounded-md text-gray-800"
						>
							Photo by{' '}
							<a class="underline" href={imageCreditLink}>
								{imageCreditName}
							</a>{' '}
							on
							<a
								class="underline"
								href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText"
							>
								Unsplash
							</a>
						</p>
					</div>
					<div class="text-gray-900 leading-loose font-serif text-lg markdown">
						<slot />
					</div>
					{
						tags && tags.length ? (
							<div class="my-10">
								<div class="flex items-center flex-wrap">
									{tags.map((tag) => (
										<a
											href={`/tags/${tag}`}
											class="flex items-center px-3 py-0.5 mr-1 mb-1 rounded-full font-medium bg-secondary hover:bg-primary text-white"
										>
											{tag}
										</a>
									))}
								</div>
							</div>
						) : null
					}
					<a href="/blog" class="font-bold mt-4 py-4 text-primary self-end">
						‚Üê Back to the blog
					</a>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
